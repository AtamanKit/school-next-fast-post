# Build stage for compiling dependencies and installing packages
FROM python:3.11-alpine as builder

# Set work directory
WORKDIR /app

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install build dependencies and packages necessary for runtime
RUN apk update && apk add --no-cache gcc musl-dev linux-headers python3-dev postgresql-dev libpq postgresql postgresql-contrib

# Upgrade pip
RUN pip install --upgrade pip

# Copy the requirements file to leverage Docker cache
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements.txt

# Final stage for the production image
FROM python:3.11-alpine

# Create and set work directory
WORKDIR /app

# Copy installed packages from the builder stage
COPY --from=builder /root/.local /usr/local

# Copy necessary PostgreSQL binaries and libraries from builder if required
COPY --from=builder /usr/bin/psql /usr/bin/psql
# COPY --from=builder /usr/lib/libpq.so.* /usr/lib/
COPY --from=builder /usr/share/postgresql /usr/share/postgresql

# Ensure scripts in .local are usable:
ENV PATH=/root/.local/bin:$PATH

# Avoid running as root for security
RUN adduser -D nonrootuser
USER nonrootuser

# Copy the application from the host to the container
COPY . .

# The command to run your application
# CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
