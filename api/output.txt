============================= test session starts ==============================
platform linux -- Python 3.11.8, pytest-8.0.0, pluggy-1.4.0
rootdir: /app
plugins: postgresql-5.1.0, anyio-4.2.0, asyncio-0.23.5
asyncio: mode=Mode.STRICT
collected 1 item

tests/test_curde.py F

=================================== FAILURES ===================================
__________________________________ test_crude __________________________________

client = <starlette.testclient.TestClient object at 0x7fd039561690>

    def test_crude(client):
>       response = client.get("/api/employees/get-employees")

tests/test_curde.py:2: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
/usr/local/lib/python3.11/site-packages/starlette/testclient.py:502: in get
    return super().get(
/usr/local/lib/python3.11/site-packages/httpx/_client.py:1055: in get
    return self.request(
/usr/local/lib/python3.11/site-packages/starlette/testclient.py:468: in request
    return super().request(
/usr/local/lib/python3.11/site-packages/httpx/_client.py:828: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
/usr/local/lib/python3.11/site-packages/httpx/_client.py:915: in send
    response = self._send_handling_auth(
/usr/local/lib/python3.11/site-packages/httpx/_client.py:943: in _send_handling_auth
    response = self._send_handling_redirects(
/usr/local/lib/python3.11/site-packages/httpx/_client.py:980: in _send_handling_redirects
    response = self._send_single_request(request)
/usr/local/lib/python3.11/site-packages/httpx/_client.py:1016: in _send_single_request
    response = transport.handle_request(request)
/usr/local/lib/python3.11/site-packages/starlette/testclient.py:344: in handle_request
    raise exc
/usr/local/lib/python3.11/site-packages/starlette/testclient.py:341: in handle_request
    portal.call(self.app, scope, receive, send)
/usr/local/lib/python3.11/site-packages/anyio/from_thread.py:288: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
/usr/local/lib/python3.11/concurrent/futures/_base.py:456: in result
    return self.__get_result()
/usr/local/lib/python3.11/concurrent/futures/_base.py:401: in __get_result
    raise self._exception
/usr/local/lib/python3.11/site-packages/anyio/from_thread.py:217: in _call_func
    retval = await retval_or_awaitable
/usr/local/lib/python3.11/site-packages/fastapi/applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
/usr/local/lib/python3.11/site-packages/starlette/applications.py:123: in __call__
    await self.middleware_stack(scope, receive, send)
/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py:186: in __call__
    raise exc
/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py:164: in __call__
    await self.app(scope, receive, _send)
/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py:62: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py:64: in wrapped_app
    raise exc
/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    await app(scope, receive, sender)
/usr/local/lib/python3.11/site-packages/starlette/routing.py:762: in __call__
    await self.middleware_stack(scope, receive, send)
/usr/local/lib/python3.11/site-packages/starlette/routing.py:782: in app
    await route.handle(scope, receive, send)
/usr/local/lib/python3.11/site-packages/starlette/routing.py:297: in handle
    await self.app(scope, receive, send)
/usr/local/lib/python3.11/site-packages/starlette/routing.py:77: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py:64: in wrapped_app
    raise exc
/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py:53: in wrapped_app
    await app(scope, receive, sender)
/usr/local/lib/python3.11/site-packages/starlette/routing.py:72: in app
    response = await func(request)
/usr/local/lib/python3.11/site-packages/fastapi/routing.py:285: in app
    raise e
/usr/local/lib/python3.11/site-packages/fastapi/routing.py:275: in app
    solved_result = await solve_dependencies(
/usr/local/lib/python3.11/site-packages/fastapi/dependencies/utils.py:594: in solve_dependencies
    solved = await solve_generator(
/usr/local/lib/python3.11/site-packages/fastapi/dependencies/utils.py:519: in solve_generator
    return await stack.enter_async_context(cm)
/usr/local/lib/python3.11/contextlib.py:650: in enter_async_context
    result = await _enter(cm)
/usr/local/lib/python3.11/contextlib.py:210: in __aenter__
    return await anext(self.gen)
app/services/database.py:66: in get_db
    async with sessionmanager.session() as session:
/usr/local/lib/python3.11/contextlib.py:210: in __aenter__
    return await anext(self.gen)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <app.services.database.DatabaseSessionManager object at 0x7fd0397b05d0>

    @contextlib.asynccontextmanager
    async def session(self) -> AsyncIterator[AsyncSession]:
        if self._sessionmaker is None:
>           raise Exception("DatabaseSessionManager is not initialized")
E           Exception: DatabaseSessionManager is not initialized

app/services/database.py:44: Exception
=============================== warnings summary ===============================
tests/test_curde.py::test_crude
  /usr/local/lib/python3.11/site-packages/pytest_asyncio/plugin.py:769: DeprecationWarning: The event_loop fixture provided by pytest-asyncio has been redefined in
  /app/tests/conftest.py:25
  Replacing the event_loop fixture with a custom implementation is deprecated
  and will lead to errors in the future.
  If you want to request an asyncio event loop with a scope other than function
  scope, use the "scope" argument to the asyncio mark when marking the tests.
  If you want to return different types of event loops, use the event_loop_policy
  fixture.
  
    warnings.warn(

tests/test_curde.py::test_crude
  /usr/local/lib/python3.11/site-packages/pydantic/_internal/_config.py:271: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.5/migration/
    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)

tests/test_curde.py::test_crude
  /usr/local/lib/python3.11/site-packages/pydantic/_internal/_config.py:321: UserWarning: Valid config keys have changed in V2:
  * 'orm_mode' has been renamed to 'from_attributes'
    warnings.warn(message, UserWarning)

../usr/local/lib/python3.11/site-packages/_pytest/cacheprovider.py:445
  /usr/local/lib/python3.11/site-packages/_pytest/cacheprovider.py:445: PytestCacheWarning: cache could not write path /app/.pytest_cache/v/cache/nodeids: [Errno 13] Permission denied: '/app/.pytest_cache/v/cache/nodeids'
    config.cache.set("cache/nodeids", sorted(self.cached_nodeids))

../usr/local/lib/python3.11/site-packages/_pytest/cacheprovider.py:397
  /usr/local/lib/python3.11/site-packages/_pytest/cacheprovider.py:397: PytestCacheWarning: cache could not write path /app/.pytest_cache/v/cache/lastfailed: [Errno 13] Permission denied: '/app/.pytest_cache/v/cache/lastfailed'
    config.cache.set("cache/lastfailed", self.lastfailed)

../usr/local/lib/python3.11/site-packages/_pytest/stepwise.py:56
  /usr/local/lib/python3.11/site-packages/_pytest/stepwise.py:56: PytestCacheWarning: cache could not write path /app/.pytest_cache/v/cache/stepwise: [Errno 13] Permission denied: '/app/.pytest_cache/v/cache/stepwise'
    session.config.cache.set(STEPWISE_CACHE_DIR, [])

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_curde.py::test_crude - Exception: DatabaseSessionManager is...
======================== 1 failed, 6 warnings in 4.97s =========================
